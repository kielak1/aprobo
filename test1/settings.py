"""
Django settings for test1 project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path

DEFAULT_FROM_EMAIL = "aprobo@kielak.com"
import socket

hostname = socket.gethostname()
# Sklej 'https://' z hostname, aby uzyskać DEFAULT_DOMAIN
DEFAULT_DOMAIN = f"https://{hostname}"

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-30n8*9krum3a*sx4@q(4g!vesldgbxhyvnxh1v7%sb8=#zvet5"

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

# Pobierz zmienną DEBUG ze środowiska, domyślnie ustaw na False
DEBUG = os.getenv("DEBUG", "False").lower() in ("true", "1", "t")

ALLOWED_HOSTS = [
    "aprobo.kielak.com",
    "localhost",
]

# Application definition
INSTALLED_APPS = [
    "crispy_forms",
    "bootstrap3",
    "django_tables2",
    "django_filters",
    "account",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "contracts",
    "ideas",
    "needs",
    "purchases",
    "general",
    "dal",
    "dal_select2",
    "django.contrib.humanize",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "test1.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            "test1/templates",
            "account/templates/registration",
            "account/templates/account",
            "contracts/templates/contracts",
            "needs/templates/needs",
            "ideas/templates/ideas",
            "purchases/templates/purchases",
            "general/templates/general",
            "/opt/avantic/env/lib/python3.11/site-packages/django_tables2/templates/django_tables2",
            "/home/tkielak/testy-django/env/lib/python3.8/site-packages/django_tables2/templates/django_tables2/",
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "general.context_processors.environment",
            ],
        },
    },
]

WSGI_APPLICATION = "test1.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "aprobo",
        "USER": "aprobo",
        "PASSWORD": "aprobo",
        "HOST": "localhost",  # Możesz również użyć adresu IP serwera PostgreSQL
        "PORT": "5432",  # Domyślny port PostgreSQL
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"
TIME_ZONE = "Europe/Warsaw"
USE_I18N = True
DATE_FORMAT = "d-M-Y"  # Ustawienie globalnego formatu daty na dzień-miesiąc-rok
# LANGUAGE_CODE = 'pl-pl'
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATICFILES_DIRS = [os.path.join(BASE_DIR, "test1", "static")]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

CRISPY_TEMPLATE_PACK = "bootstrap4"

LOGIN_REDIRECT_URL = "avantic"
LOGOUT_REDIRECT_URL = "avantic"

SESSION_EXPIRE_AT_BROWSER_CLOSE = True

SESSION_ENGINE = "django.contrib.sessions.backends.db"  # Przykładowa konfiguracja
CSRF_COOKIE_SECURE = "True"
CSRF_USE_SESSIONS = False  # Przechowuje tokeny CSRF w sesji zamiast w ciasteczkach

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "10.88.67.150"  # SMTP SERVER
EMAIL_PORT = 25
EMAIL_HOST_USER = "aprobo@kielak.com"
EMAIL_USE_TLS = False

CELERY_BROKER_URL = "redis://localhost:6379/0"
CELERY_RESULT_BACKEND = "redis://localhost:6379/0"
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
CELERY_TIMEZONE = "Europe/Warsaw"

CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True

SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SECURE = True

# Flaga HttpOnly dla ciasteczek CSRF
CSRF_COOKIE_HTTPONLY = True

# Flaga SameSite dla ciasteczek sesyjnych
SESSION_COOKIE_SAMESITE = "Lax"  # Możliwe wartości: 'Lax', 'Strict', 'None'

# Flaga SameSite dla ciasteczek CSRF
CSRF_COOKIE_SAMESITE = "Lax"
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "%(asctime)s [%(levelname)s] %(name)s: %(message)s",
            "datefmt": "%Y-%m-%d %H:%M:%S",
        },
        "simple": {
            "format": "[%(levelname)s] %(message)s",
        },
    },
    "handlers": {
        "file": {
            "level": "WARNING",
            "class": "logging.FileHandler",
            "filename": "/var/log/django/debug.log",
            "formatter": "verbose",
        },
        "console": {
            "level": "WARNING",
            "class": "logging.StreamHandler",
            "formatter": "simple",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["file", "console"],
            "level": "WARNING",
            "propagate": True,
        },
        "avantic": {
            "handlers": ["file", "console"],
            "level": "WARNING",
            "propagate": False,
        },
    },
}
